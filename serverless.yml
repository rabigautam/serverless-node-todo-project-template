
service: ${self:custom.config.project.name}
# app and org for use with dashboard.serverless.com
app: ${self:custom.config.project.name}
org: rabigautam43

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
custom:
  # NOTE: Change this if you plan to use/deploy this template!
  configStage: ${opt:stage, 'DEV'}
  config: ${file(config/${self:custom.environments.${self:custom.configStage}}.yml)}
  environments:
    DEV: dev
    # UAT: uat
    # STAGING: staging
    # PROD: prod
  documentation:
    api:
      info:
        version: "0.1"
        title: "${self:custom.config.project.name}"
        description: "This is the API for ${self:custom.config.project.name} project"
        termsOfService: ""
        contact:
          name: "Company name"
          url: "http://company.com"
          email: "support@company.com"
        license:
          name: "License name"
          url: "http://company.com/license"

plugins:
  - serverless-aws-documentation
# you can add statements to the Lambda function's IAM Role here
#  iamRoleStatements:
#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"
#            - "/*"

# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
package:
  exclude:
    - api/**
    - config/**
    - layers/**
    - node_modules/**
    - yml/**

